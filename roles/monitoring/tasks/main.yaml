---
- name: Check if monitoring namespace exists
  command: kubectl get namespace monitoring --kubeconfig=/etc/rancher/k3s/k3s.yaml
  register: ns_check
  failed_when: false
  changed_when: false

- name: Create monitoring namespace
  command: kubectl create namespace monitoring --kubeconfig=/etc/rancher/k3s/k3s.yaml
  when: ns_check.rc != 0

- name: Check if Prometheus Helm repo already exists
  shell: helm repo list | grep -q '^prometheus-community'
  register: helm_repo_check
  failed_when: false
  changed_when: false

- name: Add Prometheus Helm repo if missing
  shell: helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
  when: helm_repo_check.rc != 0

- name: Update all Helm repos
  shell: helm repo update
  when: helm_repo_check.rc != 0

- name: Check if Prometheus Helm release exists
  shell: helm status prometheus -n monitoring --kubeconfig=/etc/rancher/k3s/k3s.yaml
  register: helm_status
  failed_when: false
  changed_when: false

- name: Uninstall failed Prometheus release
  shell: helm uninstall prometheus -n monitoring --kubeconfig=/etc/rancher/k3s/k3s.yaml
  when: "'STATUS: failed' in helm_status.stdout"

- name: Install or upgrade Prometheus stack
  shell: >
    helm upgrade --install prometheus prometheus-community/kube-prometheus-stack
    --namespace monitoring
    --set grafana.service.type=NodePort
    --set grafana.service.nodePort=30000
    --set grafana.adminPassword={{ grafana_admin_password }}
    --set prometheus.service.type=ClusterIP
    --kubeconfig=/etc/rancher/k3s/k3s.yaml
  when: "'STATUS: failed' in helm_status.stdout or helm_status.rc != 0"
  register: helm_install_output
  changed_when: >
    'Release "prometheus" has been upgraded' in helm_install_output.stdout or
    'Release "prometheus" has been installed' in helm_install_output.stdout